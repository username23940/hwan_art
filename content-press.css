    /* flex, grid는 언제 쓰는가? 
    flex : 한줄 정렬 최적화(가로, 세로 한 방향으로). 아이템 크기가 유동적일 떄 자동 정렬하기 좋음
    grid : 2차원 레이아웃 최적화(행, 열 구조 필요시). 큰 레이아웃을 잡을 때, 공간 분할에 강함.(페이지, 섹션의 틀)
    보통 바깥쪽 큰 레이아웃 : grid. 안쪽 세부 정렬 : flex 
    */
    /* position의 relative와 absolute 속성값. relative는 요소를 원래 자리에서 상대적으로 이동. 부모나 다른 요소에 영향 없이
      자신의 위침나 이동. 이동 안하면 원래 자리 그대로. 다른 요소들은 relative가 원래 자리 차지한다고 생각해서 문서 흐름 깨지 X
      absolute는 요소를 문서 흐름에서 제거, 가장 가까운 position 중 relative, absolute, fixed인 부모를 기준으로(기준점) 그 안에서 배치. */
    /* align 관련 css 속성 
    text-align : 인라인 요소 텍스트(블록 요소 자체는 영향 X, 내부 콘텐츠만 정렬)
    align-tiems : flex, grid container 안의 자식들을 정렬.
    align-self : flex, grid container 내부의 아이템. align-items를 덮어쓰고 특정 아이템만 개별 정렬.
    justify-content  flex, grid container 안의 자식들을 정렬 
    place-items : grid container에서 align-items와 justify-items를 동시에 */
    
   
    .press {
      display : grid ;
      grid-template-columns : 1fr 1fr ; /* 그리드를 첫, 두번째 요소가 균등 분배*/ 
      padding : 20% ;
      padding-top : 20px ;
      gap : 5% ;
    }
    .img-wrapper { /* img의 패딩 말고, img의 칸 전체에 배경색 or 다른 기능(가운데, 상단 정렬, 캡션, 버튼)을 적용할 수 있음 */
      background: #87CEEB;
      text-align : center ; /* flex 쓸 필요 없이(여러요소, 교차축 필요시 사용) oR index.html처럼 block 요소로 하고 margin 0 auto ; */
      /* justify-content: center;  가로 중앙 정렬(flex일 경우) 
      align-items: flex-start; 세로는 상단 고정 (grid일 경우 : start) */
      padding-top: 7% ;
    }
    .img-wrapper img {
      width : 80% ; /* grid의 첫번째 요소 너비의 80% 사용 */
      /* z-index : 1 ; img-wrapper보다 항상 위에서 노출 */
      /* padding : 5% ;  %로 해야 반응형 
      background: #87CEEB -> wrapper 대용 */
    }
    .img-wrapper .caption {
        margin-top : 10px ;
        font-size : 1rem ;
        font-style : italic ;
    }
      
    .press .text-wrapper { /* text-wrapper의 위치 문제 : h1, h2를 포함 안시키면 text wrapper까지 이것들 전부를 grid로 인식
        h1, h2 포함시키면 H1, H2, main이 전부다 .press grid의 오른쪽 칸에 구겨들어감 */
      background : #ADD8E6 ;
      padding : 30px ;
      display : grid ;
      grid-template-rows : auto 1fr ; /* exclude, main만 존재하므로(고정시킬거, 본문) 세로 정렬. 본문은 고정시킬거가 다 들어간 후 남는자리에 들어가게 */
      color : blue ;
    }  
    .text-wrapper .exclude h1 {
      border-bottom : solid blue 3px ;
    }
    .text-wrapper .exclude .exclude-wrapper {
      display : grid ;
      grid-template-columns : auto 1fr ;
      margin : 7% 0 ;
      gap : 10% ;
      font-size : smaller ;
    }
    .text-wrapper .exclude .exclude-wrapper a {
      text-decoration-line : none ;
      color : blue ;
    }
    .main {
      display : grid;
      grid-template-columns : 20% 1fr ;
      gap : 10% ;
      justify-self : center ;
      color : blue ;
    }
    hr {
      border : none ;
      border-top : 1px solid blue ;
      margin : 1em 0;
    }
    .main h3{
      justify-self : center ;
    }
    .main-wrapper .subject {
      font-size : large ;      
    }
    .main-wrapper .description {
      font-size : small ;
      text-decoration-line : none ;
      color : inherit ; /* 부모(.main) 색상(blue) 상속 */
    }  
    .main-wrapper .info {
      font-size : small ;
      color : black ;
    }
  
